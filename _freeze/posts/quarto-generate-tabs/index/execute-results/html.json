{
  "hash": "5d8819c0e48dba2ce2458f84631fbfdc",
  "result": {
    "markdown": "---\ntitle: \"Programatically generate Quarto tabs\"\ndescription: \"Utilizing purrr to programatically generate tabs to organize and present a large list of outputs\"\ndate: '4-13-2023'\nimage: featured.jpg\ndraft: false\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\nWhen working with a list of objects, it may be useful to organize the objects into tabs instead of a huge list of individual objects\n\nUsing the `iris` dataset as a working example, I generate a list of ggplot objects.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- iris |> as_tibble() |> janitor::clean_names()\n\nout <- data |> \n  group_nest(species) |> \n  deframe()\n\nout <- out |> \n  map(\\(data) {\n    \n    ggplot(data, aes(x = sepal_length, y = sepal_width)) + \n      geom_point()\n    \n  })\n```\n:::\n\n\nThe list of ggplot2 objects can be called and presented as below\n\n\n::: {.cell}\n\n```{.r .cell-code}\nout\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$setosa\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n$versicolor\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n$virginica\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n:::\n\n\nInstead of presenting a long list of plots, we can organize the plots into individual tabs. In order to do this, we utilize a combination of `imap_chr()` and `knit_child()`. We use `imap_chr()` to pass on individual plots into `knit_child()`. We wrap this chunk within a fenced div `panel-tabset`, and utilize `results: asis`.\n\n\n\n````default\n::: panel-tabset\n```{r}\n#| results: asis\nout <- imap_chr(out, \\(out, title) {\n  \n  text <- glue::glue(\"## `r title`\n                      ```{{{r}}}\n                      out\n                      ```\")\n  \n  knitr::knit_child(text = text, envir = environment(),\n                    quiet = T)\n  \n})\n\ncat(out, sep = ' ')\n```\n\n:::\n````\n\n::: panel-tabset\n\n```{.r .cell-code}\nout <- imap_chr(out, \\(out, title) {\n  \n  text <- glue::glue(\"## `r title`\n```{{r}}\nout\n```\")\n  \n  knitr::knit_child(text = text, envir = environment(),\n                    quiet = T)\n  \n})\n\ncat(out, sep = ' ')\n```\n\n\n## setosa\n::: {.cell}\n\n```{.r .cell-code}\nout\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n::: \n## versicolor\n::: {.cell}\n\n```{.r .cell-code}\nout\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n::: \n## virginica\n::: {.cell}\n\n```{.r .cell-code}\nout\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n:::\n\n# Session info\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.2 (2022-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 22621)\n\nMatrix products: default\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] lubridate_1.9.2 forcats_1.0.0   stringr_1.5.0   dplyr_1.1.1    \n [5] purrr_1.0.1     readr_2.1.4     tidyr_1.3.0     tibble_3.2.1   \n [9] ggplot2_3.4.2   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] compiler_4.2.2    pillar_1.9.0      tools_4.2.2       digest_0.6.31    \n [5] timechange_0.2.0  jsonlite_1.8.4    evaluate_0.19     lifecycle_1.0.3  \n [9] gtable_0.3.3      pkgconfig_2.0.3   rlang_1.1.0       cli_3.6.1        \n[13] rstudioapi_0.14   yaml_2.3.6        xfun_0.38         fastmap_1.1.0    \n[17] janitor_2.2.0     withr_2.5.0       knitr_1.41        hms_1.1.3        \n[21] generics_0.1.3    vctrs_0.6.1       htmlwidgets_1.6.2 grid_4.2.2       \n[25] tidyselect_1.2.0  snakecase_0.11.0  glue_1.6.2        R6_2.5.1         \n[29] fansi_1.0.4       rmarkdown_2.19    farver_2.1.1      tzdb_0.3.0       \n[33] magrittr_2.0.3    scales_1.2.1      htmltools_0.5.4   colorspace_2.1-0 \n[37] renv_0.16.0       labeling_0.4.2    utf8_1.2.3        stringi_1.7.8    \n[41] munsell_0.5.0    \n```\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}