---
title: "Advent of Code 2023, Day 15"
date: '12/24/2023'
warning: false
message: false
categories:
  - advent of code
editor_options: 
  chunk_output_type: console
image: "https://miro.medium.com/max/1400/1*8NspdbQcI6w6tjZQ7kjS-A.png"
---

![](https://miro.medium.com/v2/resize:fit:4800/format:webp/1*8NspdbQcI6w6tjZQ7kjS-A.png)

```{r}
library(tidyverse)
library(here)
library(rlang)

```

# Part 1

Another fairly straight forwad puzzle. We are given an algorithm that we need to follow. The algorithm is as follows:

- Determine the ASCII code for the current character of the string.
- Increase the current value by the ASCII code you just determined.
- Set the current value to itself multiplied by 17.
- Set the current value to the remainder of dividing itself by 256.

As always let's read in the puzzle input and tidy the input into something we can work with.

```{r}

data <- read_lines(
  here('posts', 'aoc-2023-d15', 'puzzle-input.txt')
)

data <- data |> 
  str_split(',') |> 
  unlist() |> 
  as_tibble()

data
```

Now let's write a helper function that can help us decode the hash based on the provided algorithm.

```{r}
hash_decoder <- \(hash) {
  
  hash <- hash |> str_split('') |> unlist()
  
  current_value <- 0
  walk(hash, \(x) {
    ascii_code <- utf8ToInt(x)
    current_value <- (current_value + ascii_code) * 17
    current_value <<- current_value %% 256
    
  })
  
  return(current_value)
  
}
```

Finally let's apply the function across all of the values.

```{r}

data <- data |> 
  rowwise() |> 
  mutate(
    hash = hash_decoder(value)
  ) |> 
  ungroup()

data

```

The solution of the puzzle is simply the sum of all the hash values.

```{r}
#| eval: false
sum(data$hash)
```

